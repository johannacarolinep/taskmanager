@model TaskManager.ViewModels.TasklistDetailViewModel

@{
    ViewData["Title"] = "Tasklist Details";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["ErrorMessage"]
    </div>
}

<div class="bg-white py-3 py-lg-4">
    <section class="std-container row">
        <div class="col-lg-7">
            <h1 class="clr-accent-bright">@Model.Title</h1>
            <p>@Model.Description</p>
            <p><strong>Created At:</strong> @Model.CreatedAt.ToString("g")</p>
            <p><strong>Created By:</strong> @Model.CreatedByUsername</p>
            <p><strong>Your Role:</strong> @Model.UserRole</p>
        </div>
        <div class="col-lg-5 bg-neutral p-3 card d-flex flex-column">
            <h2>Contributors</h2>
            <div>
            @if (@Model.UserRole == "Owner" || @Model.UserRole == "Admin") {
                <a asp-controller="ListUser" asp-action="Invite" asp-route-listId="@Model.TasklistId" asp-route-listTitle="@Model.Title" asp-route-username="@User.Identity.Name" class="btn link-btn btn-brand mb-2">Invite <i class="fa-regular fa-envelope ms-2"></i></a>
                <a asp-controller="ListUser" asp-action="UpdateRoles" asp-route-listId="@Model.TasklistId" asp-route-listTitle="@Model.Title" class="btn link-btn btn-bright mb-2">Update roles <i class="fa-solid fa-unlock-keyhole ms-2"></i></a>
            }
            @if (@Model.UserRole == "Owner" && Model.Contributors.Count > 1) {
                <a asp-controller="ListUser" asp-action="TransferOwnership" asp-route-listId="@Model.TasklistId" asp-route-listTitle="@Model.Title" class="btn link-btn btn-red mb-2">Transfer ownership <i class="fa-solid fa-crown ms-2"></i></a>
            }
            </div>
            <div class="pt-2 px-2 bg-white contributors-container card flex-grow h-100">
                <ul class="p-0 m-0">
                    @foreach (var contributor in Model.Contributors)
                    {
                        <li class="mb-2">
                            <img src="@contributor.Image" alt="@contributor.Username" style="width: 30px; height: 30px; border-radius: 50%;" />
                            <strong>@contributor.Username</strong> - @contributor.Role
                        </li>
                    }
                </ul>
            </div>
        </div>
    </section>
</div>

@{
    var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(errorMessage)) {
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<div class="py-3 py-lg-4">
    <section class="bg-white card std-container p-3">
        <div class="d-flex">
            <h3 class="me-2">Tasks</h3>
            @if (Model.UserRole == "Owner" || Model.UserRole == "Admin") {
                <p>
                    <a asp-controller="Task" asp-action="Create" asp-route-listId="@Model.TasklistId" class="btn link-btn btn-brand">New Task<i class="fa-solid fa-square-plus ms-2"></i></a>
                </p>   
            }
        </div>
        
        <!-- Search Form -->
        <form asp-action="Tasklist" method="get" asp-route-listId="@Model.TasklistId">
            <input type="hidden" name="listId" value="@Model.TasklistId" />
            <input type="hidden" name="sortOrder" value="@ViewBag.SortOrder" />
            <input type="hidden" name="selectedPriority" value="@(ViewBag.SelectedPriority != null ? string.Join(",", ViewBag.SelectedPriority) : "")" />
            <input type="hidden" name="selectedStatus" value="@(ViewBag.SelectedStatus != null ? string.Join(",", ViewBag.SelectedStatus) : "")" />
            <input type="text" name="searchString" value="@ViewBag.SearchString" placeholder="Search by title..." />
            <button type="submit">Search</button>
        </form>

        <!-- Filter form -->
        <form method="get" asp-controller="Tasklist" asp-action="Tasklist">
            <input type="hidden" name="listId" value="@Model.TasklistId" />
            <input type="hidden" name="sortOrder" value="@ViewBag.SortOrder" />
            <input type="hidden" name="searchString" value="@ViewBag.SearchString" />

            <div>
                <h4>Filter by Priority:</h4>
                @for (int i = 1; i <= 3; i++)
                {
                    <label>
                        <input type="checkbox" name="selectedPriority" value="@i"
                            @(ViewBag.SelectedPriority != null && ViewBag.SelectedPriority.Contains(i) ? "checked" : "") /> @i
                    </label>
                }
            </div>

            <div>
                <h4>Filter by Status:</h4>
                <label>
                    <input type="checkbox" name="selectedStatus" value="NotStarted"
                        @(ViewBag.SelectedStatus != null && ViewBag.SelectedStatus.Contains("NotStarted") ? "checked" : "") /> Not Started
                </label>
                <label>
                    <input type="checkbox" name="selectedStatus" value="InProgress"
                        @(ViewBag.SelectedStatus != null && ViewBag.SelectedStatus.Contains("InProgress") ? "checked" : "") /> In Progress
                </label>
                <label>
                    <input type="checkbox" name="selectedStatus" value="Done"
                        @(ViewBag.SelectedStatus != null && ViewBag.SelectedStatus.Contains("Done") ? "checked" : "") /> Done
                </label>
            </div>

            <button type="submit">Filter</button>
        </form>

        <!-- Sorting Links -->
        <div>
            <a asp-action="Tasklist" asp-route-listId="@Model.TasklistId" asp-route-sortOrder="description" 
                asp-route-searchString="@ViewBag.SearchString"
                asp-route-selectedPriority="@(ViewBag.SelectedPriority != null ? string.Join(",", ViewBag.SelectedPriority) : "")"
                asp-route-selectedStatus="@(ViewBag.SelectedStatus != null ? string.Join(",", ViewBag.SelectedStatus) : "")">
                Sort by description
            </a> |
            <a asp-action="Tasklist" asp-route-listId="@Model.TasklistId" asp-route-sortOrder="deadline" 
                asp-route-searchString="@ViewBag.SearchString"
                asp-route-selectedPriority="@(ViewBag.SelectedPriority != null ? string.Join(",", ViewBag.SelectedPriority) : "")"
                asp-route-selectedStatus="@(ViewBag.SelectedStatus != null ? string.Join(",", ViewBag.SelectedStatus) : "")">
                Sort by deadline
            </a>
        </div>


        <div class="card bg-neutral p-3">
        @if (Model.Tasks.Count == 0) {
            <p>No tasks available for this tasklist.</p>
        }   else {
            foreach (var task in Model.Tasks) {
                <div class="card p-3 mb-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="d-flex">
                                <h4>
                                    @task.Description
                                    @if (task.Status == TaskManager.Models.TaskStatus.NotStarted) {
                                    <span class="badge rounded-pill bg-not-started text-dark">Not Started</span>
                                    } else if (task.Status == TaskManager.Models.TaskStatus.InProgress) {
                                        <span class="badge rounded-pill bg-progress text-dark">In Progress</span>
                                    } else if (task.Status == TaskManager.Models.TaskStatus.Done) {
                                        <span class="badge rounded-pill bg-complete">Complete</span>
                                    }
                                    @if (task.Priority == 1) {
                                    <span class="badge rounded-pill badge bg-dark text-white">Prio @task.Priority</span>
                                    } else if (task.Priority == 2) {
                                        <span class="badge rounded-pill badge bg-mid-dark text-white">Prio @task.Priority</span>
                                    } else {
                                        <span class="badge rounded-pill badge bg-neutral-dark text-dark">Prio @task.Priority</span>
                                    }
                                </h4>
                            </div>
                            <p><span class="fw-bolder">Due:</span> @task.Deadline.ToString("g")</p>
                            <p><span class="fw-bolder">Created:</span> @task.CreatedAt.ToString("g")</p>
                        </div>
                        <div class="col-4 d-flex justify-content-end align-items-start">
                            @if (Model.UserRole == "Owner" || Model.UserRole == "Admin") {
                                <a asp-controller="Task" asp-action="Edit" asp-route-TaskId="@task.Id" class="btn link-btn btn-edit p-2 px-4 me-2" data-bs-toggle="tooltip" data-bs-title="Edit task"><i class="fa-solid fa-pen-to-square"></i></a>
                                <a asp-controller="Task" asp-action="Delete" asp-route-TaskId="@task.Id" class="btn link-btn btn-red p-2 px-4" data-bs-toggle="tooltip" data-bs-title="Delete task"><i class="fa-solid fa-trash"></i></a>
                            }
                        </div>

                        <div class="task-progress">
                            <span class="task-pill rounded-pill bg-not-started p-2">Not started</span>
                            @if (task.Status == TaskManager.Models.TaskStatus.NotStarted) {
                                <form asp-controller="Task" asp-action="Progress" method="post" style="display: inline;">
                                    <input type="hidden" name="taskId" value="@task.Id" />
                                    <button type="submit" class="task-pill btn btn-progress-outline rounded-pill">In progress</button>
                                </form>
                            } else {
                                <span class="task-pill rounded-pill bg-progress text-dark p-2">In Progress</span>
                            }
                            @if (task.Status == TaskManager.Models.TaskStatus.NotStarted || task.Status == TaskManager.Models.TaskStatus.InProgress) {
                                <form asp-controller="Task" asp-action="Complete" method="post" style="display: inline;">
                                    <input type="hidden" name="taskId" value="@task.Id" />
                                    <button type="submit" class="task-pill btn btn-complete-outline rounded-pill">Complete</button>
                                </form>
                            } else {
                                <span class="task-pill rounded-pill bg-complete text-white p-2">Complete</span>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        </div>


    </section>
</div>
